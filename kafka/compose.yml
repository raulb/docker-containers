  
services:
  custom-kafka-0:
    container_name: custom-kafka-0

    image: apache/kafka:3.9.0
    platform: linux/amd64 # does not support arm64
    # Configure JMX exporter in command, so that the env var is not
    # set in the container, making it possible to execute kafka cli
    # tools without the JMX exporter.
    command: sh -c 'KAFKA_JMX_OPTS="-javaagent:/opt/kafka/jmx/jmx_prometheus_javaagent-1.2.0.jar=7071:/opt/kafka/jmx/kafka-jmx-config.yml" /etc/kafka/docker/run'
    healthcheck:
      test: ["CMD", "nc", "-z", "custom-kafka-0", "9092"]
      # Health checks happen every 2s, failures in the first 30s are not counted
      # toward the maximum number of retries, after 5 failed health checks the
      # service is marked as unhealthy.
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 30s
    ports:
      - "7071:7071"
      - "9092:9092"
    volumes:
      - ./jmx:/opt/kafka/jmx  # Mount JMX files
    environment:
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@custom-kafka-0:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://custom-kafka-0:9092,CONTROLLER://custom-kafka-0:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  